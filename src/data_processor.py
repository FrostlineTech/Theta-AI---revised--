import os
import json
from pathlib import Path

def load_frostline_data(data_path):
    """
    Load the Frostline dataset from a text file and structure it.
    """
    with open(data_path, 'r') as file:
        content = file.read()
    
    # Split content by empty lines to get individual entries
    entries = [entry.strip() for entry in content.split('\n\n') if entry.strip()]
    
    # Transform into a structured format for QA pairs
    qa_pairs = []
    
    # Add basic company information
    for entry in entries:
        if "Frostline Solutions offers" in entry:
            qa_pairs.append({
                "question": "What is Frostline?",
                "answer": entry.strip()
            })
            qa_pairs.append({
                "question": "What services does Frostline offer?",
                "answer": entry.strip()
            })
        
        elif "takes pride in its local only" in entry:
            qa_pairs.append({
                "question": "What infrastructure does Frostline use?",
                "answer": entry.strip()
            })
        
        elif "CEO of frostline solutions" in entry:
            qa_pairs.append({
                "question": "Who is the CEO of Frostline?",
                "answer": entry.strip()
            })
            
        elif "Co CEO of frostline solutions" in entry:
            qa_pairs.append({
                "question": "Who is the Co-CEO of Frostline?",
                "answer": entry.strip()
            })
            
        elif "hq is located" in entry:
            qa_pairs.append({
                "question": "Where is Frostline headquartered?",
                "answer": entry.strip()
            })
            qa_pairs.append({
                "question": "Where is Frostline located?",
                "answer": entry.strip()
            })
    
    return qa_pairs

def enhance_with_cybersecurity_examples():
    """
    Add cybersecurity concept examples to complement the Frostline data.
    """
    cybersecurity_examples = [
        {
            "question": "What is defense in depth?",
            "answer": "Defense in depth is a cybersecurity strategy that employs multiple layers of security controls throughout an IT system. By implementing redundant protective mechanisms, if one layer fails, others will still provide protection. This approach includes technical controls, physical security measures, and administrative policies working together to comprehensively protect organizational assets."
        },
        {
            "question": "What is zero trust architecture?",
            "answer": "Zero Trust Architecture is a security framework that assumes no user or device should be automatically trusted, whether inside or outside the network perimeter. It follows the principle of 'never trust, always verify' by requiring strict identity verification and continuous validation for every device, user, and application trying to access resources, regardless of their location."
        },
        {
            "question": "What is a penetration test?",
            "answer": "A penetration test (or pen test) is a simulated cyber attack against a computer system, network, or application to identify vulnerabilities that could be exploited. It's performed by ethical hackers using the same tools and techniques as malicious actors but in a controlled environment to help organizations improve their security posture."
        },
        {
            "question": "What is a vulnerability assessment?",
            "answer": "A vulnerability assessment is a systematic review of security weaknesses in an information system. It evaluates if the system is susceptible to any known vulnerabilities, assigns severity levels to those vulnerabilities, and recommends remediation or mitigation measures where needed."
        },
        {
            "question": "What is a SIEM solution?",
            "answer": "SIEM (Security Information and Event Management) is a solution that provides real-time analysis of security alerts generated by applications and network hardware. It combines security information management (SIM) and security event management (SEM) to provide a comprehensive view of an organization's information security."
        },
        {
            "question": "What is ransomware?",
            "answer": "Ransomware is a type of malicious software designed to block access to a computer system or data until a sum of money (ransom) is paid. It typically encrypts files on the victim's system, making them inaccessible, and demands payment to decrypt them."
        },
        {
            "question": "What is phishing?",
            "answer": "Phishing is a cybercrime where attackers disguise themselves as trustworthy entities in electronic communications to obtain sensitive information such as usernames, passwords, and credit card details. It typically occurs via email, messaging, or malicious websites and often directs users to enter personal information at a fake website that matches the look and feel of the legitimate site."
        },
        {
            "question": "What is multi-factor authentication?",
            "answer": "Multi-factor authentication (MFA) is a security system that requires more than one method of authentication from independent categories of credentials to verify the user's identity for a login or other transaction. It combines two or more independent credentials: what the user knows (password), what the user has (security token), and what the user is (biometric verification)."
        },
        {
            "question": "What is a firewall?",
            "answer": "A firewall is a network security device that monitors and filters incoming and outgoing network traffic based on an organization's previously established security policies. It acts as a barrier between a trusted internal network and untrusted external networks such as the Internet, establishing rules for what traffic should be allowed or blocked."
        },
        {
            "question": "What is an IDS/IPS?",
            "answer": "IDS (Intrusion Detection System) and IPS (Intrusion Prevention System) are security technologies that monitor network traffic for suspicious activity. An IDS detects and alerts about potential intrusions, while an IPS goes a step further by actively preventing or blocking detected intrusions. They help identify attacks that might bypass the firewall."
        }
    ]
    return cybersecurity_examples

def load_json_dataset(file_path):
    """
    Load a dataset from a JSON file.
    """
    try:
        with open(file_path, 'r') as file:
            data = json.load(file)
        return data
    except Exception as e:
        print(f"Error loading {file_path}: {e}")
        return []

def process_data():
    """
    Process all available datasets and create a comprehensive training dataset.
    """
    # Create paths
    project_dir = Path("G:/Theta AI")
    datasets_dir = project_dir / "Datasets"
    output_path = datasets_dir / "processed_data.json"
    
    # Create output directory if it doesn't exist
    os.makedirs(datasets_dir, exist_ok=True)
    
    # Process Frostline data
    frostline_path = datasets_dir / "frostlinedata.json"
    frostline_qa = load_json_dataset(frostline_path) # Use the JSON loader instead
    
    # Load cybersecurity examples
    cybersecurity_qa = enhance_with_cybersecurity_examples()
    
    # Load additional JSON datasets
    software_dev_path = datasets_dir / "software_development.json"
    it_support_path = datasets_dir / "it_support.json"
    hardware_path = datasets_dir / "hardware_knowledge.json"
    network_security_path = datasets_dir / "network_security.json"
    programming_concepts_path = datasets_dir / "programming_concepts.json"
    cloud_computing_path = datasets_dir / "cloud_computing.json"
    advanced_cybersecurity_path = datasets_dir / "advanced_cybersecurity.json"
    advanced_programming_path = datasets_dir / "advanced_programming.json"
    advanced_cloud_path = datasets_dir / "advanced_cloud.json"
    
    software_dev_qa = load_json_dataset(software_dev_path)
    it_support_qa = load_json_dataset(it_support_path)
    hardware_qa = load_json_dataset(hardware_path)
    network_security_qa = load_json_dataset(network_security_path)
    programming_concepts_qa = load_json_dataset(programming_concepts_path)
    cloud_computing_qa = load_json_dataset(cloud_computing_path)
    advanced_cybersecurity_qa = load_json_dataset(advanced_cybersecurity_path)
    advanced_programming_qa = load_json_dataset(advanced_programming_path)
    advanced_cloud_qa = load_json_dataset(advanced_cloud_path)
    
    # Combine all datasets
    all_qa_pairs = frostline_qa + cybersecurity_qa + software_dev_qa + it_support_qa + hardware_qa + \
                  network_security_qa + programming_concepts_qa + cloud_computing_qa + \
                  advanced_cybersecurity_qa + advanced_programming_qa + advanced_cloud_qa
    
    # Save processed data
    with open(output_path, 'w') as file:
        json.dump(all_qa_pairs, file, indent=2)
    
    # Print summary
    print(f"Data saved to {output_path}")
    print(f"Processed {len(all_qa_pairs)} QA pairs:")
    print(f"- {len(frostline_qa)} from Frostline data")
    print(f"- {len(cybersecurity_qa)} cybersecurity examples")
    print(f"- {len(software_dev_qa)} software development examples")
    print(f"- {len(it_support_qa)} IT support examples")
    print(f"- {len(hardware_qa)} hardware knowledge examples")
    print(f"- {len(network_security_qa)} network security examples")
    print(f"- {len(programming_concepts_qa)} programming concepts examples")
    print(f"- {len(cloud_computing_qa)} cloud computing examples")
    print(f"- {len(advanced_cybersecurity_qa)} advanced cybersecurity examples")
    print(f"- {len(advanced_programming_qa)} advanced programming examples")
    print(f"- {len(advanced_cloud_qa)} advanced cloud examples")
    
    return output_path

if __name__ == "__main__":
    process_data()
